#!/bin/sh
# postinst script for scrapy
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        # Fix for old packages not managing pyc files
        for d in /usr/lib/python*/site-packages/scrapy ; do
	    if [ -d "$d" ] ; then
	        echo "Removing old python byte-compiled files in $d"
	        rm -rf "$d"
	    fi
	done

        # Create user to run the service as
        if [ -z "`id -u scrapy 2> /dev/null`" ]; then
          adduser --system --home /var/lib/scrapy --gecos "scrapy" \
                  --no-create-home --disabled-password \
                  --quiet scrapy || true
        fi
        if [ ! -d /var/run/scrapy ]; then
          mkdir /var/run/scrapy
          chown scrapy:nogroup /var/run/scrapy
        fi

        chown scrapy:nogroup /var/log/scrapy /var/lib/scrapy /var/run/scrapy
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


